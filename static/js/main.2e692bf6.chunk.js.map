{"version":3,"sources":["images/drew-coffman.jpg","components/Comp.styles.ts","API.ts","components/QuestionCard.tsx","utils.ts","components/Category.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["module","exports","Difficulty","CatWrapper","styled","div","QWrapper","ButtonWrapper","correct","userClicked","QuestionCard","question","questionNum","answers","callBack","totalQuestions","userAnswers","className","dangerouslySetInnerHTML","__html","map","answer","key","correctAnswer","onClick","disabled","value","shuffleArray","array","sort","Math","random","APICategories","a","fetch","json","data","trivia_categories","fetchQuizQuestions","amount","difficulty","category","endpoint","read","results","incorrect_answers","correct_answer","specEnd","Category","categories","chooseCat","onChange","cat","name","id","GlobalStyle","createGlobalStyle","BGimage","Wrapper","App","useState","loading","setLoading","gameOver","setGameOver","number","setNumber","questions","setQuestions","setUserAnswers","score","setScore","setCategories","currentCat","setCurrentCat","React","useEffect","info","getCategories","quizStart","EASY","newQuestions","specQuestions","length","e","catId","Number","currentTarget","event","prev","AnswerObject","undefined","TOTAL_AMOUNT","nextQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e692bf6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/drew-coffman.0db57796.jpg\";","import styled from \"styled-components\";\r\n\r\nexport const CatWrapper = styled.div`\r\n  select {\r\n    margin-top: 30px;\r\n    width: 500px;\r\n    height: 35px;\r\n    border-radius: 4px;\r\n    background-image: linear-gradient(180deg, #fff, #ffcc91);\r\n    color: rgb(60, 60, 60);\r\n    border: none;\r\n    box-shadow: 0px 1px 2px 2px rgba(0, 0, 0, 0.25);\r\n  }\r\n\r\n  option {\r\n    background-color: #ffcc9191;\r\n    color: rgb(60, 60, 60);\r\n    user-select: none;\r\n  }\r\n`;\r\n\r\nexport const QWrapper = styled.div`\r\n  max-width: 1100px;\r\n  background: #ffad66e0;\r\n  border-radius: 8px;\r\n  border: 2px solid #d38558;\r\n  padding: 20px;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n  text-align: center;\r\n\r\n  p {\r\n    font-size: 1rem;\r\n    color: rgb(50, 50, 50);\r\n  }\r\n`;\r\n\r\ntype ButtonWrapperProps = {\r\n  correct: boolean;\r\n  userClicked: boolean;\r\n};\r\n\r\nexport const ButtonWrapper = styled.div<ButtonWrapperProps>`\r\n  transition: all 0.3s ease;\r\n\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n\r\n  button {\r\n    cursor: pointer;\r\n    user-select: none;\r\n    font-size: 0.8rem;\r\n    width: 100%;\r\n    height: 40px;\r\n    margin: 5px 0;\r\n    background: ${({ correct, userClicked }) =>\r\n      correct\r\n        ? \"linear-gradient(90deg, #43edef, #57c9ea)\"\r\n        : !correct && userClicked\r\n        ? \"linear-gradient(90deg, #ff5656, #c16868)\"\r\n        : \"linear-gradient(2deg, #0b8e4c, #decc4d)\"};\r\n    border: 3px solid #fff;\r\n    box-shadow: 1px 2px 0px rgba(0, 0, 0, 0.1);\r\n    border-radius: 8px;\r\n    color: #fff;\r\n    text-shadow: 0px 1px 0px rgba(0, 0, 0, 0.25);\r\n  }\r\n`;\r\n","import { shuffleArray } from \"./utils\";\r\n\r\nexport type Question = {\r\n  category: string;\r\n  correct_answer: string;\r\n  difficulty: string;\r\n  incorrect_answers: string[];\r\n  question: string;\r\n  type: string;\r\n};\r\n\r\nexport type CategoryType = {\r\n  id: number;\r\n  name: string;\r\n};\r\n\r\nexport type QuestionState = Question & { answers: string[] };\r\n\r\nexport enum Difficulty {\r\n  EASY = \"easy\",\r\n  MEDIUM = \"medium\",\r\n  HARD = \"hard\",\r\n}\r\n\r\nexport const APICategories = async () => {\r\n  const catEndpoint = \"https://opentdb.com/api_category.php\";\r\n  const data = await (await fetch(catEndpoint)).json();\r\n  return data.trivia_categories;\r\n};\r\n\r\nexport const fetchQuizQuestions = async (\r\n  amount: number,\r\n  difficulty?: Difficulty,\r\n  category?: number | string\r\n) => {\r\n  if (!category) {\r\n    const endpoint = `https://opentdb.com/api.php?amount=${amount}&difficulty=${difficulty}&type=multiple`;\r\n    const data = await fetch(endpoint);\r\n    const read = await data.json();\r\n    return read.results.map((question: Question) => ({\r\n      ...question,\r\n      answers: shuffleArray([\r\n        ...question.incorrect_answers,\r\n        question.correct_answer,\r\n      ]),\r\n    }));\r\n  } else if (category) {\r\n    const specEnd = `https://opentdb.com/api.php?amount=${amount}&category=${category}&type=multiple`;\r\n    const data = await (await fetch(specEnd)).json();\r\n    return data.results.map((question: Question) => ({\r\n      ...question,\r\n      answers: shuffleArray([\r\n        ...question.incorrect_answers,\r\n        question.correct_answer,\r\n      ]),\r\n    }));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { QWrapper, ButtonWrapper } from \"./Comp.styles\";\r\nimport { AnswerObject } from \"../App\";\r\n\r\ntype Props = {\r\n  question: string;\r\n  questionNum: number;\r\n  answers: string[];\r\n  callBack: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n  totalQuestions: number;\r\n  userAnswers: AnswerObject | undefined;\r\n};\r\n\r\nexport const QuestionCard: React.FC<Props> = ({\r\n  question,\r\n  questionNum,\r\n  answers,\r\n  callBack,\r\n  totalQuestions,\r\n  userAnswers,\r\n}) => {\r\n  return (\r\n    <QWrapper>\r\n      <p className=\"question\">\r\n        Question: {questionNum} / {totalQuestions}\r\n      </p>\r\n      <p dangerouslySetInnerHTML={{ __html: question }} />\r\n      <div>\r\n        {answers.map((answer) => {\r\n          return (\r\n            <ButtonWrapper\r\n              key={answer}\r\n              correct={userAnswers?.correctAnswer === answer}\r\n              userClicked={userAnswers?.answer === answer}\r\n            >\r\n              <button\r\n                onClick={callBack}\r\n                disabled={!!userAnswers}\r\n                value={answer}\r\n              >\r\n                <span dangerouslySetInnerHTML={{ __html: answer }} />\r\n              </button>\r\n            </ButtonWrapper>\r\n          );\r\n        })}\r\n      </div>\r\n    </QWrapper>\r\n  );\r\n};\r\n","export const shuffleArray = (array: any[]) => {\r\n  return [...array].sort(() => Math.random() - 0.5);\r\n};\r\n","import React from \"react\";\r\nimport { CatWrapper } from \"./Comp.styles\";\r\n\r\nconst ANY = 0;\r\n\r\ntype Props = {\r\n  categories: {\r\n    id: number;\r\n    name: string;\r\n  }[];\r\n  chooseCat: (e: React.ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nexport const Category: React.FC<Props> = ({ categories, chooseCat }) => {\r\n  return (\r\n    <CatWrapper>\r\n      <select onChange={chooseCat}>\r\n        <option value={ANY}>Any Category</option>\r\n        {categories.map((cat) => {\r\n          return (\r\n            <option key={cat.name} value={cat.id}>\r\n              {cat.name}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </CatWrapper>\r\n  );\r\n};\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\nimport BGimage from \"./images/drew-coffman.jpg\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  html {\r\n    height: 100%\r\n  }\r\n\r\n  body {\r\n    background-image: url(${BGimage});\r\n    background-size: cover;\r\n    margin: 0;\r\n    padding: 0 20px;\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    font-family: 'Catamaran', sans-serif\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  > p {\r\n    color: #fff;\r\n  }\r\n\r\n  .score {\r\n    color: #fff;\r\n    padding: 0 20px;\r\n    font-size: 2rem;\r\n  }\r\n\r\n  h1 {\r\n    font-family: Fascinate Inline, Haettenschweiler, \"Arial Narrow Bold\",\r\n      sans-serif;\r\n    background-image: linear-gradient(180deg, #eeee6b, #fff);\r\n    background-size: 100%;\r\n    background-clip: text;\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    -moz-background-clip: text;\r\n    -moz-text-fill-color: transparent;\r\n    filter: drop-shadow(2px 2px #ff6534);\r\n    font-size: 65px;\r\n    font-weight: 400;\r\n    text-align: center;\r\n    margin: 20px;\r\n  }\r\n\r\n  .begin {\r\n    margin-top: 40px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    background: #ffad66e0;\r\n    padding: 30px;\r\n    border-radius: 8px;\r\n    border: 2px solid #d38558;\r\n  }\r\n\r\n  .start,\r\n  .next {\r\n    cursor: pointer;\r\n    background: linear-gradient(180deg, #fff, #ffcc91);\r\n    border: 2px solid #d38558;\r\n    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.25);\r\n    border-radius: 8px;\r\n    height: 40px;\r\n    margin: 20px 0;\r\n    padding: 0 40px;\r\n  }\r\n\r\n  .start {\r\n    max-width: 200px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\nimport { QuestionCard } from \"./components/QuestionCard\";\nimport {\n  Difficulty,\n  QuestionState,\n  fetchQuizQuestions,\n  APICategories,\n  CategoryType,\n} from \"./API\";\nimport { Category } from \"./components/Category\";\nimport { GlobalStyle, Wrapper } from \"./App.styles\";\n\nconst TOTAL_AMOUNT = 10;\n\nexport type AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nfunction App() {\n  const [loading, setLoading] = useState(false);\n  const [gameOver, setGameOver] = useState(true);\n  const [number, setNumber] = useState(0);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [categories, setCategories] = useState<CategoryType[]>([]);\n  const [currentCat, setCurrentCat] = useState(0);\n\n  React.useEffect(() => {\n    const getCategories = async () => {\n      const info = await APICategories();\n      setCategories(info);\n    };\n    getCategories();\n  }, [setCategories]);\n\n  const chooseCat = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const catId = Number(e.currentTarget.value);\n    setCurrentCat(catId);\n  };\n\n  const quizStart = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    if (currentCat === 0) {\n      const newQuestions = await fetchQuizQuestions(\n        TOTAL_AMOUNT,\n        Difficulty.EASY\n      );\n      setQuestions(newQuestions);\n    } else {\n      const specQuestions = await fetchQuizQuestions(\n        TOTAL_AMOUNT,\n        Difficulty.EASY,\n        currentCat\n      );\n      setQuestions(specQuestions);\n    }\n\n    setNumber(0);\n    setUserAnswers([]);\n    setScore(0);\n    setLoading(false);\n  };\n\n  const handleAnswers = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (!gameOver) {\n      const answer = event.currentTarget.value;\n      const correct = questions[number].correct_answer === answer;\n      if (correct) {\n        setScore((prev) => prev + 1);\n      }\n      const AnswerObject = {\n        question: questions[number].question,\n        answer,\n        correct,\n        correctAnswer: questions[number].correct_answer,\n      };\n      setUserAnswers((prev) => [...prev, AnswerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n    if (nextQuestion === TOTAL_AMOUNT) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return (\n    <>\n      <GlobalStyle />\n      <Wrapper className=\"App\">\n        <h1>TypeScript Quiz</h1>\n        {gameOver || userAnswers.length === TOTAL_AMOUNT ? (\n          <div className=\"begin\">\n            <Category categories={categories} chooseCat={chooseCat} />\n            <button className=\"start\" onClick={quizStart}>\n              Start\n            </button>\n          </div>\n        ) : null}\n        {!gameOver && <p className=\"score\">Score: {score}</p>}\n        {loading && <p className=\"loading\">loading...</p>}\n        {!loading && !gameOver ? (\n          <QuestionCard\n            question={questions[number].question}\n            questionNum={number + 1}\n            answers={questions[number].answers}\n            callBack={handleAnswers}\n            totalQuestions={TOTAL_AMOUNT}\n            userAnswers={userAnswers ? userAnswers[number] : undefined}\n          />\n        ) : null}\n        {!gameOver &&\n        !loading &&\n        userAnswers.length === number + 1 &&\n        number !== TOTAL_AMOUNT - 1 ? (\n          <button className=\"next\" onClick={nextQuestion}>\n            {\" \"}\n            Next Question\n          </button>\n        ) : null}\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}